Andrés Meléndez
Alex Espinoza
Diego Redondo
Marco Gonzalez

1. Explique las principales diferencias entre un producto de software genérico y un software personalizado, destacando sus implicaciones en la gestión y el desarrollo.

 1. Definición
➡ Software Genérico:

Es un producto diseñado para satisfacer necesidades comunes de un amplio grupo de usuarios.

Se desarrolla para el mercado masivo.

Ejemplo: Microsoft Word, Excel, navegadores web.

➡ Software Personalizado:

Es desarrollado específicamente para un cliente o una organización particular.

Se adapta a necesidades específicas del negocio.

Ejemplo: Un sistema de gestión de inventario hecho a medida para una tienda local.

2. Desarrollo
➡ Genérico:

El desarrollo lo realiza una empresa especializada sin un cliente específico.

Se basa en estudios de mercado y suposiciones sobre requerimientos comunes.

Suele tener ciclos de desarrollo largos pero bien definidos.

➡ Personalizado:

Se construye en colaboración con el cliente final.

El desarrollo es más flexible y requiere comunicación constante.

Cambios y requisitos pueden surgir durante el proceso.

3. Costos
➡ Genérico:

Menor costo para el usuario individual, ya que se distribuye entre muchos compradores.

Generalmente se paga una licencia o suscripción.

➡ Personalizado:

Mayor costo inicial porque se desarrolla desde cero para un solo cliente.

Puede requerir mantenimiento exclusivo y soporte continuo.

4. Tiempo de Implementación
➡ Genérico:

Rápido, porque ya está desarrollado.

Solo se necesita instalación y configuración.

➡ Personalizado:

Toma más tiempo, ya que implica análisis, diseño, desarrollo, pruebas e implementación.

5. Flexibilidad y Adaptación
➡ Genérico:

Limitada. Debes adaptarte a lo que el software ofrece.

Las personalizaciones pueden estar restringidas o requerir plugins externos.

➡ Personalizado:

Altamente adaptable. El sistema se ajusta exactamente a los procesos del cliente.

6. Mantenimiento y Actualizaciones
➡ Genérico:

Las actualizaciones son responsabilidad del proveedor y se aplican a todos los usuarios.

Mantenimiento centralizado.

➡ Personalizado:

Mantenimiento a cargo del desarrollador o equipo interno.

Las actualizaciones dependen del cliente y su presupuesto.



2. Describa los cuatro atributos importantes que debe tener todo producto de software. Sugiera además cuatro atributos adicionales que podrían ser significativos para productos específicos.

Atributos Importantes:
 - Mantenibilidad: Debe escribirse de tal forma que pueda evolucionar para cumplir con las necesidades de cambio de los clientes. 
 - Confiabilidad: Fiabilidad, protección y seguridad. El software confiable no debe causar daños físicos o económicos en el caso de que exista una falla del sistema.
 - Eficiencia: El software no debe malgastar recursos del sistema, como memoria y ciclos de procesamiento. Por lo tanto con eficiencia también nos referimos a tiempos de respuesta y de procesamiento, utilización de memoria, etc. 
 - Usabilidad: Debe ser fácil de usar, sin esfuerzo adicional por el usuario para quien está diseñado. Debe tener una UI apropiada y buena documentación:

Atributos adicionales: 
 - Portabilidad: Es decir que se pueda ejecutar en diferentes dispositivos o sistemas.
 - Escalabilidad: Que pueda ser un software con proyección y preparado para cualquier crecimiento en el volúmen de los datos. 
 - Tolerante a fallos: Que siga funcionando o al menos parcialmente aunque hayan fallas.
 - Velocidad de respuesta: Que haya una respuesta rápida y eficiente para el usuario y el entorno. 



3. Analice por qué los costos de pruebas de software son particularmente altos en productos genéricos destinados a un mercado amplio y cómo esto influye en su desarrollo.

Los costos de pruebas en productos genéricos para un mercado amplio son altos porque deben garantizar que el software funcione correctamente en muchas configuraciones distintas. Además, al usar enfoques evolutivos y componentes reutilizables, se requiere hacer pruebas frecuentes y detalladas para asegurar compatibilidad e integración. Estos productos no suelen tener una fase de mantenimiento separada, sino que se crean nuevas versiones, lo que implica repetir el proceso de pruebas constantemente. Todo esto hace que las pruebas sean una de las actividades más costosas del desarrollo.